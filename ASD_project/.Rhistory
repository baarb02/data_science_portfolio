))
demographics <- read_csv("~data/demo_train.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
demographics <- read_csv("data/demo_train.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("../data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
utterance_lengths <- read_csv("data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
utterance_lengths <- read_csv("Documents/GitHub/data_science_portfolio/ASD_project/data/demo_train.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
utterance_lengths <- read_csv("/Documents/GitHub/data_science_portfolio/ASD_project/data/demo_train.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
Documents/GitHub/data_science_portfolio/ASD_project/
knitr::opts_chunk$set(fig.width=4, fig.height=3)
knitr::opts_chunk$set(fig.width=4, fig.height=3)
knitr::opts_chunk$set(echo = TRUE, awarning = FALSE, message = FALSE)
knitr::opts_knit$set(root.dir = "/Users/barb/Documents/GitHub/data_science_portfolio/ASD_project/")
pacman::p_load(
tidyverse,
brms,
bayesplot,
patchwork,
modelsummary,
gridExtra,
rstanarm,
Metrics,
tidybayes,
scales,
knitr
)
# you will have to install CmdStan with Anaconda if you dont have it
theme_set(theme_minimal())
knitr::opts_chunk$set(fig.width=4, fig.height=3)
knitr::opts_chunk$set(echo = TRUE, awarning = FALSE, message = FALSE)
knitr::opts_knit$set(root.dir = "/Users/barb/Documents/GitHub/data_science_portfolio/ASD_project/")
pacman::p_load(
tidyverse,
brms,
bayesplot,
patchwork,
modelsummary,
gridExtra,
rstanarm,
Metrics,
tidybayes,
scales,
knitr
)
# you will have to install CmdStan with Anaconda if you dont have it
theme_set(theme_minimal())
dataset <- read_csv("data/data_clean.csv") %>%
mutate(
Gender = factor(Gender),
Child.ID = factor(Child.ID),
Diagnosis = factor(Diagnosis, levels = c("TD", "ASD"))
)
head(dataset)
participant_dataset <- dataset %>% subset(Visit == 1)
datasummary(
data = participant_dataset,
formula = Diagnosis * (Age + ADOS + MullenRaw + ExpressiveLangRaw + Socialization) ~ (Median + Mean + SD + Min + Max),
output = "data.frame",
fmt = fmt_sprintf("%.1f")
) %>% kable()
datasummary(
data = participant_dataset,
formula = Diagnosis * (Gender + 1) ~ N,
output = "data.frame",
fmt = fmt_sprintf("%.1f")
) %>% kable()
visualize_dist <- function(metric) {
ggplot(group_by(dataset, Child.ID)) +
geom_density(aes(get(metric), group = Diagnosis, fill = Diagnosis, color = Diagnosis), alpha = 0.6, na.rm = TRUE) +
labs(x = metric, y = "Density")
}
for (metric in colnames(dplyr::select(dataset, c(Age, ADOS, MullenRaw, ExpressiveLangRaw, Socialization)))) {
print(visualize_dist(metric))
}
ggplot(dataset, aes(x = Visit, y = CHI_MLU, group = Diagnosis, color = Diagnosis)) +
geom_smooth(formula = y ~ x + I(x^2), method="lm", na.rm = TRUE) +
scale_x_continuous(breaks = 1:6) +
labs(title = "Progression of MLU over time", y = "MLU (Mean length of utterance)")
ggplot(dataset, aes(x = Visit, y = CHI_MLU, group = Child.ID, color = Child.ID)) +
stat_smooth(formula = y ~ x + I(x^2), method="lm", na.rm = TRUE, se = FALSE, alpha = 0.5, geom = "line", linewidth = 1) +
scale_x_continuous(breaks = 1:6) +
labs(title = "Progression of MLU over time per child in each group", y = "MLU (Mean length of utterance)") +
facet_wrap(~Diagnosis) +
theme(legend.position = "none")
ggplot(dataset, aes(x = Visit, y = CHI_MLU, group = Child.ID, color = Diagnosis)) +
stat_smooth(formula = y ~ x + I(x^2), method="lm", na.rm = TRUE, se = FALSE, alpha = 0.5, geom = "line", linewidth = 1) +
scale_x_continuous(breaks = 1:6) +
labs(title = "Progression of MLU over time per group", y = "MLU (Mean length of utterance)")
dataset_train <- dataset
simple_model_formula <- bf(CHI_MLU ~ Visit + Diagnosis + MOT_MLU + MullenRaw + (1 | Child.ID))
get_prior(simple_model_formula, data = dataset_train) %>% kable()
custom_priors <- c(
prior(normal(0, 2), class = b, coef = DiagnosisASD),
prior(normal(0, 2), class = b, coef = Visit),
prior(normal(0, 2), class = b, coef = MOT_MLU),
prior(normal(0, 2), class = b, coef = MullenRaw)
)
prior_fit <- brm(
data = dataset_train,
formula = simple_model_formula,
family = gaussian,
prior = custom_priors,
sample_prior = "only",
file = "data/prior_fit1",
file_refit = "on_change",
backend = "cmdstanr",
chains = 2,
stan_model_args = list(stanc_options = list("O1")),
refresh = 0
)
prior_fit %>% print(digits = 2)
pp_check(prior_fit, ndraws = 100) +
coord_cartesian(xlim = c(-50, 50))
fit1 <- brm(
data = dataset_train,
formula = simple_model_formula,
family = gaussian,
prior = custom_priors,
backend = "cmdstanr",
file = "data/model_fit1",
file_refit = "on_change",
chains = 2,
stan_model_args = list(stanc_options = list("O1")),
refresh = 0
)
fit1 %>% print(digits = 2)
pp_check(fit1, ndraws = 100)
pp_check(fit1, type = "error_scatter_avg", ndraws = 100) + geom_smooth(method = "lm")
pp_check(fit1, type = "error_scatter_avg_vs_x", x = "Visit", ndraws = 100)
model_formula <- bf(
CHI_MLU ~ Visit + Diagnosis + MullenRaw + Diagnosis:Visit + (Visit + Diagnosis | Child.ID),
sigma ~ Diagnosis + (Diagnosis | Visit)
)
custom_priors <- c(
prior(normal(0, 2), class = Intercept),
prior(normal(0, 2), class = b, coef = Visit),
prior(normal(0, 2), class = b, coef = DiagnosisASD),
prior(normal(0, 2), class = b, coef = MullenRaw)
)
# for faster processing we can use threads = threading(4), but at the time of writing this the machine does not like this argument
fit2 <- brm(
data = dataset_train,
formula = model_formula,
family = gaussian,
prior = custom_priors,
backend = "cmdstanr",
file = "data/model_fit2",
file_refit = "on_change",
chains = 2,
cores = 2,
stan_model_args = list(stanc_options = list("O1")),
silent = 2,
seed = 0
)
fit2 %>% print(digits = 2)
pp_check(fit2, ndraws = 100)
pp_check(fit2, type = "dens_overlay_grouped", group = "Diagnosis", ndraws = 100)
pp_check(fit2, type = "error_scatter_avg", ndraws = 100) + geom_smooth(method = "lm")
pp_check(fit2, type = "error_scatter_avg_vs_x", x = "Visit", ndraws = 100)
mcmc_intervals(fit2, pars = c("b_Intercept", "b_Visit", "b_DiagnosisASD", "b_MullenRaw"))
# r2_bayes(fit1)
# r2_bayes(fit2)
loo_compare(
add_criterion(fit1, "loo"),
add_criterion(fit2, "loo"),
criterion = c("loo")
)[, c("elpd_diff", "se_diff")] %>% round(2) %>% kable()
demographics <- read_csv("data/demo_test.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("../data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
demographics <- read_csv("data/demo_test.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
words_uttered <- read_csv("token_test.csv") %>%
mutate(
SUBJ = str_replace_all(SUBJ, "[:punct:]", ""),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>% select(c(
SUBJ,
VISIT,
types_MOT,
types_CHI,
tokens_MOT,
tokens_CHI
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
demographics <- read_csv("data/demo_test.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
words_uttered <- read_csv("token_test.csv") %>%
mutate(
SUBJ = str_replace_all(SUBJ, "[:punct:]", ""),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>% select(c(
SUBJ,
VISIT,
types_MOT,
types_CHI,
tokens_MOT,
tokens_CHI
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
demographics <- read_csv("data/demo_test.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
words_uttered <- read_csv("data/token_test.csv") %>%
mutate(
SUBJ = str_replace_all(SUBJ, "[:punct:]", ""),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>% select(c(
SUBJ,
VISIT,
types_MOT,
types_CHI,
tokens_MOT,
tokens_CHI
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
dataset_test <- demographics %>%
left_join(utterance_lengths, by=c("Child.ID", "Visit")) %>%
left_join(words_uttered, by=c("Child.ID", "Visit")) %>%
as_tibble() %>%
mutate(
Gender = factor(Gender),
Child.ID = factor(Child.ID),
Diagnosis = factor(recode(Diagnosis, A = "ASD", B = "TD"), levels = c("TD", "ASD"))
)
dataset_test %>% write_csv(file = "../data/test_data_clean.csv")
demographics <- read_csv("data/demo_test.csv") %>%
mutate(
Child.ID = factor(str_replace_all(Child.ID, "[:punct:]", ""))
) %>% select(c(
Child.ID,
Visit,
Diagnosis,
Ethnicity,
Gender,
Age,
ADOS,
MullenRaw,
ExpressiveLangRaw,
Socialization
))
utterance_lengths <- read_csv("data/LU_test.csv") %>%
mutate(
SUBJ = factor(str_replace_all(SUBJ, "[:punct:]", "")),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>%   select(c(
SUBJ,
VISIT,
MOT_MLU,
CHI_MLU,
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
words_uttered <- read_csv("data/token_test.csv") %>%
mutate(
SUBJ = str_replace_all(SUBJ, "[:punct:]", ""),
VISIT = as.numeric(str_extract(VISIT, "\\d+"))
) %>% select(c(
SUBJ,
VISIT,
types_MOT,
types_CHI,
tokens_MOT,
tokens_CHI
)) %>%
rename(
Child.ID = SUBJ,
Visit = VISIT
)
dataset_test <- demographics %>%
left_join(utterance_lengths, by=c("Child.ID", "Visit")) %>%
left_join(words_uttered, by=c("Child.ID", "Visit")) %>%
as_tibble() %>%
mutate(
Gender = factor(Gender),
Child.ID = factor(Child.ID),
Diagnosis = factor(recode(Diagnosis, A = "ASD", B = "TD"), levels = c("TD", "ASD"))
)
dataset_test %>% write_csv(file = "data/test_data_clean.csv")
dataset_train_predictions <- add_predicted_draws(drop_na(dataset_train, any_of(all.vars(model_formula$formula))), fit2, allow_new_levels = TRUE)
dataset_test_predictions <- add_predicted_draws(drop_na(dataset_test, any_of(all.vars(model_formula$formula))), fit2, allow_new_levels = TRUE)
data.frame(row.names = c("Training dataset", "Testing dataset"), RMSE = c(
Metrics::rmse(dataset_train_predictions$CHI_MLU, dataset_train_predictions$.prediction),
Metrics::rmse(dataset_test_predictions$CHI_MLU, dataset_test_predictions$.prediction)
)
) %>% round(2) %>% kable()
dataset_test_predictions %>%
mutate(residual = .prediction - CHI_MLU) %>%
median_qi(residual, .width = c(.9, .99)) %>%
ggplot(aes(CHI_MLU, residual, ymin = .lower, ymax = .upper, color = Diagnosis)) +
geom_abline(intercept = 0, slope = 0, alpha = 0.9) +
geom_pointinterval() +
geom_smooth(method = "lm", color = "darkviolet", fill = "darkviolet") +
coord_cartesian(ylim = c(-3, 3)) +
labs(
title = "Predictions on test dataset vs observed\n",
caption = sprintf("N = %d", dataset_test_predictions$.row %>% unique %>% length),
x = "\nChild MLU",
y = "Prediction residual\n"
)
ggplot() +
stat_summary(aes(Visit, CHI_MLU, color = "Typical TD Child at visit"), data = subset(dataset_train, Diagnosis == "TD"), geom = "line", fun = mean, na.rm = TRUE) +
stat_summary(aes(Visit, CHI_MLU), data = subset(dataset_train, Diagnosis == "TD"), geom = "point", size = 4, alpha = 0.8, fun = mean, na.rm = TRUE) +
geom_point(aes(Visit, CHI_MLU, color = Diagnosis, fill = Diagnosis, group = Child.ID, shape = Child.ID), data = dataset_test, size = 3, alpha = 0.8, position = position_dodge2(width = 0.3, padding = 0.5), na.rm = TRUE) +
scale_fill_discrete(guide = "none") +
scale_shape_manual(name = "Child ID", values = c(21, 22, 23, 24, 25, 10)) +
scale_color_manual(name = "Group", breaks = c("Typical TD Child at visit", "TD", "ASD"), values = c("black", hue_pal()(2))) +
scale_x_continuous(breaks = 1:6) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(xlim = c(1, 6), ylim = c(0, 4)) +
labs(
title = "Test per child development (compared to typical TD child)\n",
x = "\nVisit",
y = "Child MLU\n",
caption = sprintf("N = %d participants", dataset_test_predictions$Child.ID %>% unique %>% length)
)
